extends layout

block content
  style.
    #scroll1 div {
        height: 1px;
    }
    .pagination-container {
      text-align: center;
      font-size: 20px;
      cursor: pointer;
    }

    //table { table-layout: fixed; }
    pre {padding: 5px; margin: 5px; }
    .string { color: green; }
    .number { color: darkorange; }
    .boolean { color: blue; }
    .null { color: magenta; }
    .key { color: red; }

  .container-fluid.mt-2
    .row
      .col-lg-1.text-secondary.mt-2
          a(href="/tsapp/home" style="text-decoration: none;")
            i.fa.fa-clock-o.fa-2x.text-primary
            |   TsApp 
            span.badge.badge-primary#userType
      .col-lg-9(style='display: none;')
        .input-group
          input#searchtext.form-control(autocomplete="off", placeholder="Type in to verify...", style='border-radius: 10px 0px 0px 10px;')
          .input-group-prepend
            .input-group-text.text-secondary.bg-white(style='cursor: pointer;border-radius: 0px 10px 10px 0px;', onclick='clearSearchBox()')
              i.fa.fa-times
        .row
          .col-lg-8(style='font-size: 12px;')
            #placholderUserInfoText.text-muted
          .col-lg-4
            #fixedTips
              a(style="float: right;", href="#",  data-toggle='modal', data-target='#exampleModal6')
                i.fa.fa-lightbulb-o.text-warning
                |   Searching tips!
      .col-lg-1(style='display: none;')
        .row
          .col-lg-6
            span(title="Search")
              button.btn.btn-outline-primary(onclick="search('0')")
                i.fa.fa-search
          .col-lg-6
            span(title="Clear All Search")
              button.btn.btn-outline-primary(onclick="removeFilters('0', 2)")
                i.fa.fa-times
      .col-lg-1(style='display: none;') 
        .btn-group.dropleft.w-100
          button.btn.btn-block.btn-outline-primary.dropdown-toggle(type='button', data-toggle='dropdown', aria-haspopup='true', aria-expanded='false')
            i.fa.fa-user-o
          .dropdown-menu
            a.dropdown-item.text-success(href='#')
              #userName
            .dropdown-divider
            //a.dropdown-item(href='/tsapp/home/usersettings')
              //i.fa.fa-user-o
              //|   User Settings
            //.dropdown-divider
            a.dropdown-item(href='/tsapp/users/logout')
              i.fa.fa-sign-out
              |   Logout
    .container-fluid
      .row#speceficTextSearchHeaders

    .row
      .col-lg-2.text-secondary#filtersPanel(style="display: none; cursor: pointer;", onclick="closeFilter()")
        hr
        button.btn.btn-block.btn-sm.btn-outline-primary.mr-1(onclick="advanceSearchClose()")
          |   Close 
          i.fa.fa-times
        button.btn.btn-block.btn-sm.btn-outline-primary(onclick="search('0')")
          |   Search 
          i.fa.fa-search             
        //button.btn.btn-sm.btn-outline-primary.mr-1(onclick="removeFilters('0', 1)")
          //i.fa.fa-times
        #addedFilters(onclick='event.stopPropagation()')
          hr
          font.text-muted
            i.fa.fa-filter
            |  No Filters Added
      .col-lg-10#addFilters(style="display: none;")
        i.fa.fa-spinner.fa-spin
    br
    .content-wrapper
      .email-wrapper.wrapper
        .row.align-items-stretch
          .mail-list-container.col-md-12.text-center.border-right.bg-white
            .mb-3.px-3
               .container
                 .row
                   .col-lg-12
                     h1.lead
                       i.fa.fa-rocket.fa-1x.text-primary
                       |   Commit to Ropsten Ethereum Testnet
                     #showErrorMsg
                 hr
                 .row
                   .col-lg-12
                     #metamask
                       .container
                         .row
                           .col-lg-8
                             h1.lead(style='text-align: left') 
                               |
                           .col-lg-4(style='text-align: right')
                             span(title='Copy to Clipboard')
                               i.fa.fa-clone.fa-2x.text-success(style='cursor: pointer;', onclick='selectElementContents(document.getElementById(\'copyvalue\'))')
                             span.mr-2(title='View as JSON')
                              i.fa.fa-code.fa-2x.text-primary(style='cursor: pointer;', onclick="viewJSON()", data-toggle="modal", data-target="#exampleModal1")
                       hr
                       #copyvalue
                         textarea.form-control.w-100#xvalue(type='text', style='overflow:scroll; height:30vh; font-type: bold; background-color: white; text-align: center', disabled)
                       #baseMsg(style='text-align: left;')
                         small.text-muted
                           |  This is the Base64 Encoded Data of the Complete Merkle Tree which will be commited to the public blockchain.
                       hr
                       input.btn.btn-sm.btn-outline-success.text-center#Button1(type='button', onclick='addToBlockchain()', value='Add to Blockchain')
                       a.btn.btn-sm.btn-outline-warning.text-center.ml-1(href='/tsapp/home')
                         |  Add to Blockchain Later
                       a.btn.btn-sm.btn-outline-secondary.text-center.ml-1(href='/tsapp/home')
                         |  Back to Home



  #exampleModal1.modal.fade(tabindex='-1', role='dialog', aria-labelledby='exampleModalLabel', aria-hidden='true')
    .modal-dialog.modal-lg(role='document')
      .modal-content
        .modal-header
          h5#exampleModalLabel1.modal-title
            i.fa.fa-code-fork.text-warning
            |   Tree
          button.close(type='button', data-dismiss='modal', aria-label='Close')
            span(aria-hidden='true') &times;
        .modal-body
          pre#currentTree
        .modal-footer
          button.btn.btn-outline-secondary(type='button', data-dismiss='modal') Close


  script(src='https://code.jquery.com/jquery-3.2.1.slim.min.js', integrity='sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN', crossorigin='anonymous')
  script.
    window.jQuery || document.write('<script src="/tsapp/custom/dist/js/vendor/jquery-slim.min.js"><\\/script>')
  script(src='/tsapp/custom/dist/js/jquery-2.1.1.js')
  //script(src='/tsapp/custom/dist/js/bootstrap.min.js')
  script(src='/tsapp/custom/dist/js/jquery.doubleScroll.js')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js')
  script(src='/tsapp/custom/dist/js/logout.js')
  //script(src='https://unpkg.com/feather-icons/dist/feather.min.js')
  script.
    feather.replace()
  script(src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js')
  script(src='')
  script.
    let currentFileName = '';
    let configJSON = '';
    let currentUser = "#{user}";
    let currentFolderView = [];
    $("#userName").empty();
    $("#userName").append("<i class='fa fa-check'> " + currentUser + "</i>");

    let currentRootHash = '';
    let currentRootTree = '';
    let currentTransactions = '';
    let currentTXID = '';
    let currentJSON = '';

    function syntaxHighlight(json) {
        json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
        return json.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function (match) {
            var cls = 'number';
            if (/^"/.test(match)) {
                if (/:$/.test(match)) {
                    cls = 'key';
                } else {
                    cls = 'string';
                }
            } else if (/true|false/.test(match)) {
                cls = 'boolean';
            } else if (/null/.test(match)) {
                cls = 'null';
            }
            return '<span class="' + cls + '">' + match + '</span>';
        });
    }

    function viewJSON() {
      //alert(currentRootTree);
      $("#currentTree").empty();
      $("#currentTree").append(syntaxHighlight(JSON.stringify(currentJSON, null, 4)));
    }

    function localSetValue() {
      $.ajax({
        type: "POST",
        url: '/tsapp/home/set',
        data: { "ROOT_HASH": currentRootHash, "ROOT_TREE": currentRootTree, "TXID": currentTXID, "TRANSACTIONS": currentTransactions },
        success: function(data) {
          console.log(data);
      }, async: true });
    }

    function testSetValue() {
      currentTXID = Math.random().toString(36).substring(7);
      $("#showErrorMsg").empty();
      $("#showErrorMsg").append('<br /><div class="alert alert-danger alert-dismissible fade show" role="alert"> <strong>Transaction ID</strong> ' + currentTXID  + ' <hr />Copy this Transaction ID, as it will help in verification of the file later.<button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">Ã—</span> </button> </div>');
      localSetValue();
    }

   function selectElementContents(el) {
      let body = document.body, range, sel;
      if (document.createRange && window.getSelection) {
          range = document.createRange();
          sel = window.getSelection();
          sel.removeAllRanges();
          try {
              range.selectNodeContents(el);
              sel.addRange(range);
          } catch (e) {
              range.selectNode(el);
              sel.addRange(range);
          }
          document.execCommand("copy");

      } else if (body.createTextRange) {
          range = body.createTextRange();
          range.moveToElementText(el);
          range.select();
          range.execCommand("Copy");
      }
    }      

    function addToBlockchain() {
         $("#showErrorMsg").empty(); 
         $("#showErrorMsg").append('<br /><div class="alert alert-success alert-dismissible fade show" role="alert"> <strong>Transaction Pending</strong><hr /><i class="fa fa-spinner fa-spin"></i> Processing... Please Wait... <br />Typically a block creation typically would take 1-2 minutes.</div>');
       $.ajax({
         type: "POST",
         url: '/tsapp/home/addtoblockchain',
         data: { "hash_obj": $("#xvalue").val() },
         success: function(data) {    
           console.log(data);
           //blockHash, blockNumber, gasUsed, transactionHash
           let blockHash = data["blockHash"];
           let blockNumber = data["blockNumber"];
           let gasUsed = data["gasUsed"];
           let transactionHash = data["transactionHash"];
           $("#showErrorMsg").empty(); 
           $("#showErrorMsg").append('<br /><div class="alert alert-success alert-dismissible fade show" role="alert"> <strong>Transaction Complete</strong> <hr /> Block Hash: ' + blockHash  + '<hr /> Block Number: ' + blockNumber + '<hr /> Gas Used: ' + gasUsed + '<hr />Transaction Hash: <a target="_blank" href="https://ropsten.etherscan.io/tx/' + transactionHash + '">' + transactionHash + '</a><hr />Copy this Transaction Hash, as it will help in verification of the file later.<button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">Ã—</span> </button> </div>');
           currentTXID = transactionHash;
           localSetValue();

       }, async: true }); 
    }


    $(document).ready(function(){
      $.ajax({
        type: "GET",
        url: '/tsapp/home/mroot',
        success: function(data) {
          data = data.data[0];

          currentRootHash = data["CURRENT_ROOT"];
          currentRootTree = data["CURRENT_TREE"];
          currentTransactions = data["TRANSACTIONS"];
          let base64EncodedDataArr = JSON.parse(currentRootTree);

          let finalJSONToCommit = {};
          finalJSONToCommit["root"] = currentRootHash;
          finalJSONToCommit["transactions"] = currentTransactions.split(",");
          finalJSONToCommit["proof_obj"] = base64EncodedDataArr;
          let finalData = JSON.stringify(finalJSONToCommit);
          currentJSON = finalJSONToCommit;
          $("#xvalue").val('');
          $("#xvalue").val(btoa(finalData));

          /********************************************************/
          /*let getTree = JSON.parse(JSON.parse(currentRootTree));
          console.log(JSON.stringify(getTree));
          let getTreeKeys = Object.keys(getTree);
          let firstKeyValue = getTree[getTreeKeys[0]];
          for(let eachTreeKey of getTreeKeys) {
            if(!eachTreeKey.startsWith(firstKeyValue)) {
              //console.log(eachTreeKey, getTree[eachTreeKey]);
              base64EncodedDataArr.push(getTree[eachTreeKey]);
            } else {
              break;
            }
          }*/
          /********************************************************/
      }, async: true });
    });   
